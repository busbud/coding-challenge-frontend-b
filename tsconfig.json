{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "module": "esnext",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",

    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,

    /* Additional Checks */
    "noUnusedLocals": true /* Report errors on unused locals. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,

    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
    "baseUrl": "." /* Base directory to resolve non-absolute module names */,
    "paths": {
      "@apiFunctions/*": ["./apiFunctions/*"],
      "@constants/*": ["./constants/*"],
      "@pages/*": ["./pages/*"],
      "@texts/*": ["texts/*"],
      "@customTypes/*": ["customTypes/*"],
      "@uiAssets/*": ["./uiAssets/*"],
      "@uiComponents/*": ["./uiComponents/*"],
      "@utils/*": ["./utils/*"],
      "@views/*": ["./views/*"],
      "@root/*": ["./*"]
    } /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
  },
  "exclude": ["node_modules"],
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"]
}
